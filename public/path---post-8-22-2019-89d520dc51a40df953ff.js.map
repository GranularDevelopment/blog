{"version":3,"sources":["webpack:///path---post-8-22-2019-89d520dc51a40df953ff.js","webpack:///./.cache/json/post-8-22-2019.json"],"names":["webpackJsonp","527","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,4BAAAC,OAAA,gBAA4DC,gBAAmBC,GAAA,qHAAAC,KAAA,08DAA+8DC,aAA6JL,MAAA,8CAAAM,KAAA,qBAAiFC,aAAgBC,KAAA,mBAAAC,UAAsCC,QAAUF,KAAA,oBAA0BH,aAAgBL,MAAA,+BAAsCW,MAASD,QAAUF,KAAA,qBAA2BH,aAAgBL,MAAA","file":"path---post-8-22-2019-89d520dc51a40df953ff.js","sourcesContent":["webpackJsonp([1135338029179],{\n\n/***/ 527:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Granular Development Blog\",\"author\":\"Brian Smith\"}},\"markdownRemark\":{\"id\":\"/Users/briansmith/Documents/Dev/granular-blog/src/pages/post-8-22-2019/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3>Load Balancer Setup: How to handle requests based on location.</h3>\\n<p>Goal: Setup a new API using a path parameter. For example, you want to add /api to your url path that will hit your new API. That is yourwebiste.com/api.</p>\\n<p>The first step is to add a location block in your Nginx configuration. Lets create the location api block.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">    server {\\n\\n    listen 443 ssl;\\n    listen [::]:443 ssl ;\\n\\n\\n    location / {\\n      proxy_read_timeout 300;\\n      proxy_connect_timeout 300;\\n      proxy_pass http://yourwebsite.com;\\n    }\\n\\n    #New API location\\n    location ^~ /api{\\n      proxy_read_timeout 300;\\n      proxy_connect_timeout 300;\\n      proxy_pass http://api/;\\n    }\\n\\n }</code></pre>\\n      </div>\\n<p>The next step is to add the upstream block that will pass the request to your backend servers.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">#Upstream block\\nupstream api {\\n    server backendserver:8081;\\n  }\\n\\nserver {\\n\\n    listen 443 ssl;\\n    listen [::]:443 ssl ;\\n\\n\\n    location / {\\n      proxy_read_timeout 300;\\n      proxy_connect_timeout 300;\\n      proxy_pass http://yourwebsite.com;\\n    }\\n\\n    #New API location\\n    location ^~ /api{\\n      proxy_read_timeout 300;\\n      proxy_connect_timeout 300;\\n      proxy_pass http://api/;\\n    }\\n }</code></pre>\\n      </div>\\n<h3>Backend Server Setup</h3>\\n<p>Now we need to configure the backendserver to listen to port 8081 to receive the requests.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">server {\\n    listen 8081;\\n    server_name api;\\n\\n    location / {\\n        include proxy_params;\\n        proxy_pass http://unix:/path/to/api;\\n    }\\n}</code></pre>\\n      </div>\\n<h3>Conclusion</h3>\\n<p>That’s it! Nginx makes it very easy to configure and handle path paramter requests.</p>\",\"frontmatter\":{\"title\":\"Nginx Loadbalancing Passing Path Parameters\",\"date\":\"August 22, 2019\"}}},\"pathContext\":{\"slug\":\"/post-8-22-2019/\",\"previous\":{\"fields\":{\"slug\":\"/post-6-23-2019/\"},\"frontmatter\":{\"title\":\"Jenkins Build Pull Request\"}},\"next\":{\"fields\":{\"slug\":\"/post-9-29-2019 /\"},\"frontmatter\":{\"title\":\"SQLAlchemy update or delete on table violates foreign key constraint\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---post-8-22-2019-89d520dc51a40df953ff.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Granular Development Blog\",\"author\":\"Brian Smith\"}},\"markdownRemark\":{\"id\":\"/Users/briansmith/Documents/Dev/granular-blog/src/pages/post-8-22-2019/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3>Load Balancer Setup: How to handle requests based on location.</h3>\\n<p>Goal: Setup a new API using a path parameter. For example, you want to add /api to your url path that will hit your new API. That is yourwebiste.com/api.</p>\\n<p>The first step is to add a location block in your Nginx configuration. Lets create the location api block.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">    server {\\n\\n    listen 443 ssl;\\n    listen [::]:443 ssl ;\\n\\n\\n    location / {\\n      proxy_read_timeout 300;\\n      proxy_connect_timeout 300;\\n      proxy_pass http://yourwebsite.com;\\n    }\\n\\n    #New API location\\n    location ^~ /api{\\n      proxy_read_timeout 300;\\n      proxy_connect_timeout 300;\\n      proxy_pass http://api/;\\n    }\\n\\n }</code></pre>\\n      </div>\\n<p>The next step is to add the upstream block that will pass the request to your backend servers.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">#Upstream block\\nupstream api {\\n    server backendserver:8081;\\n  }\\n\\nserver {\\n\\n    listen 443 ssl;\\n    listen [::]:443 ssl ;\\n\\n\\n    location / {\\n      proxy_read_timeout 300;\\n      proxy_connect_timeout 300;\\n      proxy_pass http://yourwebsite.com;\\n    }\\n\\n    #New API location\\n    location ^~ /api{\\n      proxy_read_timeout 300;\\n      proxy_connect_timeout 300;\\n      proxy_pass http://api/;\\n    }\\n }</code></pre>\\n      </div>\\n<h3>Backend Server Setup</h3>\\n<p>Now we need to configure the backendserver to listen to port 8081 to receive the requests.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">server {\\n    listen 8081;\\n    server_name api;\\n\\n    location / {\\n        include proxy_params;\\n        proxy_pass http://unix:/path/to/api;\\n    }\\n}</code></pre>\\n      </div>\\n<h3>Conclusion</h3>\\n<p>That’s it! Nginx makes it very easy to configure and handle path paramter requests.</p>\",\"frontmatter\":{\"title\":\"Nginx Loadbalancing Passing Path Parameters\",\"date\":\"August 22, 2019\"}}},\"pathContext\":{\"slug\":\"/post-8-22-2019/\",\"previous\":{\"fields\":{\"slug\":\"/post-6-23-2019/\"},\"frontmatter\":{\"title\":\"Jenkins Build Pull Request\"}},\"next\":{\"fields\":{\"slug\":\"/post-9-29-2019 /\"},\"frontmatter\":{\"title\":\"SQLAlchemy update or delete on table violates foreign key constraint\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/post-8-22-2019.json\n// module id = 527\n// module chunks = 1135338029179"],"sourceRoot":""}